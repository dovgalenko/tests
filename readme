1) Задания для сдачи экзамена по дисциплине «Программирование и основы алгоритмизации»:

1. y= 5/( x^2 -81) на интервале [-20, 20] с шагом 0.5.
2. Написать программу, которая проверяет, находится ли введенное с клавиатуры число в массиве. Массив должен вводиться во время работы программы.
3. Преобразовать матрицу А ( m?n) так, чтобы строки с нечетными индексами были упорядочены по убыванию, с четными – по возрастанию.
4. Написать функцию, которая возвращает минимальное из двух целых чисел, полученных в качестве аргумента.
5. Реализовать класс для работы с числами, который позволяет складывать, вычитать, умножать и делить действительные числа.

2) Задания для сдачи зачета с оценкой по дисциплине «Программирование и основы алгоритмизации»:
1. list. Создать 2 пустых списка, один заполнить числами от 1 до 7, второй заполнить нулями. Вставить второй список в первый перед первым элементом, имеющим значение 5. Отсортировать первый список и вывести его на экран.
2. forward_list. Создать последовательный список, инициализировать его значениями {5, 6, 7, 8}. Вставить в начало последовательного списка 3 новых элемента (любых). Удалить третий элемент и элементы, расположенные после элемента со значением 7. Вывести последовательный список на экран.
3. set. Создать пустое множество, заполнить его любыми числами. Упорядочивание должно осуществляться по возрастанию. Проверить есть ли в множестве число 15. Если нет, то вставить и вывести позицию, на которую было вставлено это число. Вывести множество на экран.
4. multiset. Создать мультимножество, заполнить числами с дубликатами. Упорядочивание должно осуществляться по убыванию. Вывести мультимножество на экран. Удалить все элементы мультимножества со значением 5 и вывести на экран сколько раз произошло удаление.
5. vector. Создать контейнер vector. Заполнить пятью положительными и отрицательными числами. Удалить все отрицательные элементы, вывести контейнер на экран.
6. vector, count_if. Создать контейнер vector. Заполнить любыми числами. Посчитать сколько элементов с нечетным значением. Вывести это значение на экран.
7. vector, find. Создать контейнер vector. Заполнить любыми числами. Найти первый элемент, который больше трех, вывести на экран этот элемент и его позицию.
8. бинарные деревья. Создать структуру данных «бинарное дерево», заполнить его числами, введенными с клавиатуры и вывести значения дерева на экран. Написать функции добавления и удаления звена в дереве